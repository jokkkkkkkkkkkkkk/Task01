<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="
    	http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
    
	<!-- 导入资源文件：jdbc.properties -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    
	<!-- 数据源.Apache-DBCP2连接池 -->
	 <bean id="dataSource_dbcp2" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">              
		<property name="driverClassName" value="${jdbc.driver}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		
		<!--初始化-->
		<property name="maxIdle" value="${dbcp2.maxIdle}"/>        
        <property name="minIdle" value="${dbcp2.minIdle}"/>        
        <property name="initialSize" value="${dbcp2.initialSize}"/>        
        <property name="timeBetweenEvictionRunsMillis" 
                                        value="${dbcp2.timeBetweenEvictionRunsMillis}"/> 
		<property name="poolPreparedStatements" value="${dbcp2.poolPreparedStatements}"/>        
        <property name="maxOpenPreparedStatements" value="${dbcp2.maxOpenPreparedStatements}"/>        
        <property name="removeAbandonedTimeout" value="${dbcp2.removeAbandonedTimeout}"/>

        <!-- 申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能 -->        
        <property name="testOnBorrow" value="${dbcp2.testOnBorrow}"/>

        <!-- 归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能  -->        
        <property name="testOnReturn" value="${dbcp2.testOnReturn}"/>

        <!-- 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于
             timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。  -->               
        <property name="testWhileIdle" value="${dbcp2.testWhileIdle}"/>

        <!-- 用来检测连接是否有效的sql，要求是一个查询语句,如果validationQuery为
             null，testOnBorrow、testOnReturn、testWhileIdle都不起其作用。 -->            
<!--         <property name="validationQuery" value="${dbcp2.validationQuery}"/>      -->
	 </bean>
	 
     <!--3 会话工厂bean sqlSessionFactoryBean -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 数据源 -->
        <property name="dataSource" ref="dataSource_dbcp2"></property>
        <!-- 映射.xml位置 -->
<!--         <property name="mapperLocations" value="classpath*:*Mapper.xml"></property> -->
         <property name="mapperLocations" value="classpath*:com/spring/app/TraineeDB/mapping/*.xml"></property>
    </bean>	   

    <!--4 自动扫描对象关系映射 DAO接口所在包名，Spring会自动查找其下的类-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        <property name="basePackage" value="com.spring.app.TraineeDB.dao"></property>
    </bean>	



    <!--6 容器自动扫描IOC组件  -->
    <context:component-scan base-package="com.spring.app.TraineeDB"></context:component-scan>
    
	<!--7 aspectj支持自动代理实现AOP功能 -->
    <aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>	   
    	
</beans>